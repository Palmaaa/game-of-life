{"mappings":"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","sources":["src/config/index.ts","src/models/Cell.ts","src/models/Population.ts","src/utils/index.ts","src/index.ts"],"sourcesContent":["export const cell = {\n  size: 10,\n};\n","import { cell as cellConfig } from '../config';\n\nclass Cell {\n  private width = cellConfig.size;\n\n  private height = cellConfig.size;\n\n  x: number;\n\n  y: number;\n\n  c: CanvasRenderingContext2D;\n\n  dx = this.width;\n\n  dy = this.height;\n\n  constructor(c: CanvasRenderingContext2D, x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    this.c = c;\n\n    this.draw();\n  }\n\n  draw() {\n    this.c.fillRect(this.x, this.y, this.width, this.height);\n    this.c.strokeRect(this.x, this.y, this.width, this.height);\n  }\n\n  die() {\n    this.c.clearRect(this.x, this.y, this.width, this.height);\n  }\n\n  shouldDie(cells: Cell[]) {\n    const numberOfNeighbours = this.getNumberOfNeighbours(cells);\n    return numberOfNeighbours < 2 || numberOfNeighbours > 3;\n  }\n\n  getNumberOfNeighbours(cells: Cell[]) {\n    let n = 0;\n    cells.forEach((cell) => {\n      if (\n        (cell.x === this.x - this.width && cell.y === this.y - this.height)\n        || (cell.x === this.x - this.width && cell.y === this.y)\n        || (cell.x === this.x - this.width && cell.y === this.y + this.height)\n        || (cell.x === this.x && cell.y === this.y - this.height)\n        || (cell.x === this.x && cell.y === this.y + this.height)\n        || (cell.x === this.x + this.width && cell.y === this.y - this.height)\n        || (cell.x === this.x + this.width && cell.y === this.y)\n        || (cell.x === this.x + this.width && cell.y === this.y + this.height)\n      ) {\n        n++;\n      }\n    });\n\n    return n;\n  }\n}\n\nexport default Cell;\n","import { cell as cellConfig } from '../config';\nimport Cell from './Cell';\n\nconst canvas = document.querySelector('canvas')!;\n\nconst c = canvas.getContext('2d')!;\n\nclass Population {\n  aliveCells: Cell[];\n\n  deadCellsIndexes: number[] = [];\n\n  newBornCells: Cell[] = [];\n\n  generationCounter = 1;\n\n  constructor(aliveCells: Cell[]) {\n    this.aliveCells = aliveCells;\n  }\n\n  nextGeneration() {\n    for (let x = 0; x < window.innerWidth; x += cellConfig.size) {\n      for (let y = 0; y < window.innerHeight; y += cellConfig.size) {\n        const cell = this.findCellAt(x, y);\n\n        if (cell) {\n          this.handleAliveCell(cell);\n        } else {\n          this.handleDeadCellAt(x, y);\n        }\n      }\n    }\n\n    this.cleanDeadCells();\n    this.aliveCells = [...this.aliveCells, ...this.newBornCells];\n    this.newBornCells = [];\n    this.deadCellsIndexes = [];\n    this.generationCounter++;\n  }\n\n  findCellAt(x: number, y: number): Cell | undefined {\n    return this.aliveCells.find((cell) => cell.x === x && cell.y === y);\n  }\n\n  handleDeadCellAt(x: number, y: number) {\n    if (this.shouldBecomeAliveCellAt(x, y)) {\n      this.newBornCells.push(new Cell(c, x, y));\n    }\n  }\n\n  shouldBecomeAliveCellAt(x: number, y: number): boolean {\n    let n = 0;\n    this.aliveCells.forEach((cell) => {\n      if (\n        (cell.x === x - cellConfig.size && cell.y === y - cellConfig.size)\n        || (cell.x === x - cellConfig.size && cell.y === y)\n        || (cell.x === x - cellConfig.size && cell.y === y + cellConfig.size)\n        || (cell.x === x && cell.y === y - cellConfig.size)\n        || (cell.x === x && cell.y === y + cellConfig.size)\n        || (cell.x === x + cellConfig.size && cell.y === y - cellConfig.size)\n        || (cell.x === x + cellConfig.size && cell.y === y)\n        || (cell.x === x + cellConfig.size && cell.y === y + cellConfig.size)\n      ) {\n        n++;\n      }\n    });\n\n    return n === 3;\n  }\n\n  handleAliveCell(cell: Cell) {\n    if (cell.shouldDie(this.aliveCells)) {\n      cell.die();\n      const deadCellIndex = this.aliveCells.findIndex(\n        (aliveCell) => aliveCell.x === cell.x && aliveCell.y === cell.y,\n      );\n      this.deadCellsIndexes.push(deadCellIndex);\n    }\n  }\n\n  cleanDeadCells() {\n    this.deadCellsIndexes.sort((a, b) => a - b);\n    for (let i = this.deadCellsIndexes.length - 1; i >= 0; i--) {\n      this.aliveCells.splice(this.deadCellsIndexes[i], 1);\n    }\n  }\n}\n\nexport default Population;\n","import { cell } from '../config';\n\nexport function getCellPosition(coordinate: number) {\n  return cell.size * (Math.ceil(coordinate / cell.size) - 1);\n}\n","import Cell from './models/Cell';\nimport Population from './models/Population';\n\nimport { getCellPosition } from './utils';\n\nlet cells: Cell[] = [];\n\nlet isRunning = false;\n\nlet requestId: number;\n\nconst canvas = document.querySelector('canvas')!;\nconst c = canvas.getContext('2d')!;\n\nfunction setupCanvas() {\n  canvas.height = window.innerHeight;\n  canvas.width = window.innerWidth;\n\n  c.strokeStyle = '#ccc';\n  c.lineWidth = 1;\n\n  canvas.addEventListener('click', (event) => {\n    if (!isRunning) {\n      cells.push(\n        new Cell(\n          c,\n          getCellPosition(event.clientX),\n          getCellPosition(event.clientY),\n        ),\n      );\n    }\n  });\n}\n\nfunction startPopulation() {\n  const population = new Population(cells);\n\n  let tick = 1;\n\n  function f() {\n    if (tick % 5 === 0 && isRunning) {\n      population.nextGeneration();\n    }\n    tick++;\n    requestId = requestAnimationFrame(f);\n  }\n\n  f();\n}\n\nfunction registerKeyboardControls() {\n  document.addEventListener('keyup', (event) => {\n    if (event.key === 'Enter') {\n      isRunning = true;\n      startPopulation();\n    }\n\n    if (event.key === 't') {\n      isRunning = !isRunning;\n    }\n\n    if (event.key === 'r') {\n      isRunning = false;\n      cells = [];\n      cancelAnimationFrame(requestId);\n      c.clearRect(0, 0, canvas.width, canvas.height);\n    }\n  });\n}\n\nfunction main() {\n  setupCanvas();\n  registerKeyboardControls();\n}\n\nmain();\n"],"names":["$f29ba7ab599f9b17$export$e2e1361cdc35271d","$17a53c327d573614$export$2e2bcd8739ae039","c","x","y","this","width","height","dx","dy","draw","fillRect","strokeRect","die","clearRect","shouldDie","cells","numberOfNeighbours","getNumberOfNeighbours","n","forEach","cell","$1ac9cc937539100c$var$c","document","querySelector","getContext","$1ac9cc937539100c$export$2e2bcd8739ae039","aliveCells","deadCellsIndexes","newBornCells","generationCounter","nextGeneration","window","innerWidth","innerHeight","findCellAt","handleAliveCell","handleDeadCellAt","cleanDeadCells","find","shouldBecomeAliveCellAt","push","deadCellIndex","findIndex","aliveCell","sort","a","b","i","length","splice","$6c61bec066eb0609$export$83e188f12afc1ff1","coordinate","Math","ceil","$e04467055a32edce$var$requestId","$e04467055a32edce$var$cells","$e04467055a32edce$var$isRunning","$e04467055a32edce$var$canvas","$e04467055a32edce$var$c","$e04467055a32edce$var$registerKeyboardControls","addEventListener","event","key","population","tick","f","requestAnimationFrame","$e04467055a32edce$var$startPopulation","cancelAnimationFrame","strokeStyle","lineWidth","clientX","clientY"],"version":3,"file":"index.e158a8b2.js.map"}